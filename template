#!/bin/bash
REPO="https://raw.githubusercontent.com/matteolc/react-admin-template/master/"

copy_from_git () {
  src_filename=$1;
  dst_filename=$1;
  [ -e $dst_filename ] && rm $dst_filename;
  wget "${REPO}${src_filename}" -O $dst_filename  
}

copy_files () {
    files=$1
    subpath=$2
    [ ! -d app/src$subpath ] && mkdir app/src$subpath
    for file in "${files[@]}"
    do
        copy_from_git "app/src${subpath}/${file}.js"
    done    
}

# This is a general-purpose function to ask Yes/No questions in Bash, either
# with or without a default answer. It keeps repeating the question until it
# gets a valid answer.

ask() {
    # https://djm.me/ask
    local prompt default reply

    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read reply </dev/tty

        # Default?
        if [ -z "$reply" ]; then
            reply=$default
        fi

        # Check if the reply is valid
        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

install_excel () {
#   [ ! -d app/src/button ] && mkdir app/src/button
#   [ ! -d app/src/component ] && mkdir app/src/component
#   [ ! -d app/src/input ] && mkdir app/src/input
  component_files=('ExcelActions' 'ActionsWithExcel' 'ExportToExcel' 'ImportFromExcel' 'DownloadButton')
  input_files=('FileInput')
  copy_files $component_files '/component'
  copy_files $input_files '/input'
#   for file in "${button_files[@]}"
#   do
#    copy_from_git "app/src/button/${file}.js"
#   done
#   for file in "${component_files[@]}"
#   do
#    copy_from_git "app/src/component/${file}.js"
#   done  
#   for file in "${input_files[@]}"
#   do
#    copy_from_git "app/src/input/${file}.js"
#   done
}

install_pdf () {
#   [ ! -d app/src/component ] && mkdir app/src/component
  component_files=('PrintToPdf')
  copy_files $component_files '/component'
#   for file in "${component_files[@]}"
#   do
#    copy_from_git "app/src/component/${file}.js"
#   done  
}

install_countries () {
#   [ ! -d app/src/field ] && mkdir app/src/field
  root_files=('App.countries')
  resource_files=('countries' 'index.countries')
  field_files=('FlagField')  
  copy_files $root_files '' 
  copy_files $resource_files '/resources' 
  copy_files $field_files '/field' 
  mv app/src/App.countries.js app/src/App.js
  mv app/src/resources/index.countries.js app/src/resources/index.js    
#   for file in "${root_files[@]}"
#   do
#    copy_from_git "app/src/${file}.js"
#   done   
#   for file in "${resource_files[@]}"
#   do
#    copy_from_git "app/src/resources/${file}.js"
#   done   
#   for file in "${field_files[@]}"
#   do
#    copy_from_git "app/src/field/${file}.js"
#   done   
  cd app && yarn add react-flags
  cp -Rf node_modules/react-flags/vendor/flags public/
  cd ..
}

create-react-app app
# mkdir app/src/resources
# mkdir app/src/input

root_files=('App' 'authClient' 'dataClient' 'Layout' 'Menu' 'MyAccount' 'types' 'theme' 'downloadFile')
resource_files=('accounts' 'users' 'index')
input_files=('DateTimeInput')
copy_files $root_files '' 
copy_files $resource_files '/resources' 
copy_files $input_files '/input'

# for file in "${base_files[@]}"
# do
#    copy_from_git "app/src/${file}.js"
# done
# for file in "${resource_files[@]}"
# do
#    copy_from_git "app/src/resources/${file}.js"
# done
# for file in "${input_files[@]}"
# do
#    copy_from_git "app/src/input/${file}.js"
# done

copy_from_git 'app/public/index.html'
copy_from_git 'app/package.json'

cd app && yarn install && cd ..

if ask "Do you want to add support for Excel data import & export?"; then
    install_excel
fi
if ask "Do you want to add support for PDF?"; then
    install_pdf
fi
if ask "Do you want to add support for Excel data import & export?"; then
    install_countries
fi

cd app
echo "REACT_APP_NAME=Example" > .env
echo "REACT_APP_API_PROTOCOL=http" >> .env
echo "REACT_APP_API_ADDRESS=127.0.0.1" >> .env
echo "REACT_APP_API_PORT=5000" >> .env


